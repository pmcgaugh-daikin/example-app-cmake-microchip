// Copyright (c) 2023 Daikin Comfort Technologies North America, Inc.
// SPDX-License-Identifier: Apache-2.0
{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Config Project",
			"type": "shell",
			"command": "python",
			"args": [
				"${workspaceFolder}/scripts/save_config.py",
				"${workspaceFolder}/.vscode/config_store.json",
				"board",
				"${input:project.board}",
				"svd",
				"${input:project.svd}",
				"openocd",
				"${input:project.openocd}"
			],
			"dependsOn": [
				"Config Prompt"
			],
			"options": {
				"statusbar": {
					"hide": false,
					"label": "$(target) Target",
					"tooltip": "Configure your projects Tasks and Launch Settings (required before flash or debug)",
					"color": "#ffbe78"
				}
			}
		},
		{
			"label": "Config Prompt",
			"type": "shell",
			"presentation": {
				"echo": false,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": false,
				"clear": false
			},"linux":{
			"command": "echo",
			"args": [
				"\"",
				"${input:project.config}",
				"==============================================\n",
				"Remembered project.board: ${input:project.board}\n",
				"Remembered project.svd: ${input:project.svd}\n",
				"Remembered project.openocd: ${input:project.openocd}\n",
				"==============================================\n",
				"\""
			],},
			"windows":{
				"command": "echo",
				"args": [
					"${input:project.config}",
					"==============================================",
					"Remembered project.board: ${input:project.board}",
					"Remembered project.svd: ${input:project.svd}",
					"Remembered project.openocd: ${input:project.openocd}",
					"==============================================",
				],},
			"options": {
				"statusbar": {
					"hide": true
				}
			}
		},
		{
			"label": "Startup Config",
			"type": "shell",
			"presentation": {
				"echo": false,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": false,
				"clear": false
			},
			"windows":{
			"command": "echo",
			"args": [
				"Restored the following from local_config.json:",
				"==============================================",
				"SVD File: ${input:remember.svd}",
				"Board Target: ${input:remember.board}",
				"OpenOCD File: ${input:remember.openocd}",
				"=============================================="
			],},
			"linux":{
				"command": "echo",
				"args": [
					"\"",
					"Restored the following from local_config.json:\n",
					"==============================================\n",
					"SVD File: ${input:remember.svd}\n",
					"Board Target: ${input:remember.board}\n",
					"OpenOCD File: ${input:remember.openocd}\n",
					"==============================================\n",
					"\""
				],},
			"options": {
				"statusbar": {
					"hide": true
				}
			},
			"runOptions": {
				"runOn": "folderOpen"
			}
		},
		{
			"label": "Flash App",
			"type": "shell",
			"command": "openocd",
			"args": [
				"-f",
				"${input:remember.openocd}",
				"-c",
				"program build/zephyr/zephyr.elf verify reset exit"
			],
			"dependsOn": [
				"build"
			],
			"options": {
				"statusbar": {
					"hide": false,
					"label": "$(desktop-download) Flash App",
					"tooltip": "Flash your seleted chip over OpenOCD",
					"color": "#fc9d92"
				}
			}
		},
		{
			"label": "build",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				"${command:cmake.buildDirectory}",
			],
			"group": "build",
			"problemMatcher": "$gcc",
			"options": {
				"statusbar": {
					"hide": false,
					"label": "$(gather) Build",
					"tooltip": "Build your software using CMake",
					"color": "#9cff6b"
				}
			}
		},
		{
			"label": "Set Zephyr Source",
			"type": "shell",
			"group": "build",
			"windows": {"command": "${workspaceFolder}/../zephyr/zephyr-env.cmd"},
			"linux": {"command": "${workspaceFolder}/../zephyr/zephyr-env.sh"},
			"dependsOn": [],
			"problemMatcher": [],
			"options": {
				"statusbar": {
					"hide": true
				}
			}
		},
		{
			"label": "Set West Source",
			"type": "shell",
			"group": "build",
			"command": "west",
			"args": [
				"config",
				"zephyr.base",
				"${workspaceFolder}/../zephyr"
			],
			"dependsOn": [],
			"problemMatcher": [],
			"options": {
				"statusbar": {
					"hide": true
				}
			}
		},
		{
			"label": "Set West Source Prefer",
			"type": "shell",
			"group": "build",
			"command": "west",
			"args": [
				"config",
				"zephyr.base-prefer",
				"configfile"
			],
			"dependsOn": [],
			"problemMatcher": [],
			"options": {
				"statusbar": {
					"hide": true
				}
			}
		},
		{
			"label": "Clean Build App",
			"type": "shell",
			"group": "build",
			"linux": {
				"command": "rm",
				"args": [
					"-rf",
					"${command:cmake.buildDirectory}"
				]
			},
			"windows": {
				"command": "if ( Test-Path -Path '${command:cmake.buildDirectory}' ){ rm -R '${command:cmake.buildDirectory}'}",
			},
			"dependsOn": [],
			"problemMatcher": [],
			"options": {
				"statusbar": {
					"hide": true
				}
			}
		},
		{
			"label": "Clean Build Bootloader",
			"type": "shell",
			"group": "build",
			"command": "rm",
			"args": [
				"-rf",
				"${config:app_boot.build_dir}"
			],
			"dependsOn": [],
			"problemMatcher": [],
			"options": {
				"statusbar": {
					"hide": true
				}
			}
		},
		{
			"type": "shell",
			"label": "Reconfig & Rebuild",
			"group": "build",
			"problemMatcher": [],
			"dependsOn": [
				"Reconfigure",
				"build"
			],
			"dependsOrder": "sequence",
			"options": {
				"statusbar": {
					"hide": false,
					"label": "$(refresh) Clean Rebuild",
					"color": "#faee82",
					"tooltip": "Remove /build Directory, Reconfigure CMake and Rebuild",
				}
			}
		},
		{
			"type": "shell",
			"label": "Reconfigure",
			"command": "cmake",
			"args": [
				"${workspaceFolder}/app",
				"--preset",
				"${command:cmake.activeConfigurePresetName}"
			],
			"group": "build",
			"problemMatcher": [],
			"options": {
				"statusbar": {
					"hide": true
				}
			}
		},
		{
			"label": "Build MCUBoot",
			"type": "shell",
			"group": "build",
			"command": "west",
			"args": [
				"build",
				"-b",
				"atsame54_xpro",
				"-p",
				"auto",
				"../bootloader/mcuboot/boot/zephyr",
				"--",
				"-DDTC_OVERLAY_FILE='../../../../mchp-zephyr-demo.git/app/confs_overlays/atsame54_xpro_mcuboot_partitions.overlay;usb_cdc_acm.overlay;../../../../mchp-zephyr-demo.git/app/confs_overlays/bootloader/atsame54_xpro_bootloader.overlay;app.overlay'",
				"-DEXTRA_CONF_FILE='../../../../mchp-zephyr-demo.git/app/confs_overlays/bootloader/atsame54_xpro_bootloader.conf;usb_cdc_acm_log_recovery.conf'"
			],
			"dependsOn": [
				//"Set Zephyr Source"
			],
			"problemMatcher": [
				"$gcc"
			],
			"options": {
				"statusbar": {
					"hide": false
				}
			}
		}
	],
	"inputs": [
		{
			"id": "project.config",
			"type": "command",
			"command": "extension.commandvariable.pickStringRemember",
			"args": {
				"key": "empty",
				"fileName": "${workspaceFolder}/.vscode/target_config.json",
				"fileFormat": "json",
				"jsonOption": {
					"label": "content.targets[__itemIdx__].name",
					"value": {
						"openocd": "content.targets[__itemIdx__].openocd",
						"svd": "content.targets[__itemIdx__].svd",
						"board": "content.targets[__itemIdx__].board"
					}
				},
				"description": "Choose a Board"
			}
		},
		{
			"id": "project.openocd",
			"type": "command",
			"command": "extension.commandvariable.remember",
			"args": {
				"key": "openocd"
			}
		},
		{
			"id": "project.board",
			"type": "command",
			"command": "extension.commandvariable.remember",
			"args": {
				"key": "board"
			}
		},
		{
			"id": "project.svd",
			"type": "command",
			"command": "extension.commandvariable.remember",
			"args": {
				"key": "svd"
			}
		},
		{
			"id": "remember.svd",
			"type": "command",
			"command": "extension.commandvariable.file.content",
			"args": {
				"fileName": "${workspaceFolder}/.vscode/config_store.json",
				"json": "content.svd",
				"default": "",
				"keyRemember": "svd"
			}
		},
		{
			"id": "remember.board",
			"type": "command",
			"command": "extension.commandvariable.file.content",
			"args": {
				"fileName": "${workspaceFolder}/.vscode/config_store.json",
				"json": "content.board",
				"default": "",
				"keyRemember": "board"
			}
		},
		{
			"id": "remember.openocd",
			"type": "command",
			"command": "extension.commandvariable.file.content",
			"args": {
				"fileName": "${workspaceFolder}/.vscode/config_store.json",
				"json": "content.openocd",
				"default": "",
				"keyRemember": "openocd"
			}
		}
	]
}